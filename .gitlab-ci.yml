stages:
  - scan
  - trigger

# defaults mainly for debugging vars get set correctly; runs after every job
default:
  after_script:
    - printenv

variables:
  SECURE_ANALYZERS_PREFIX: "$CI_TEMPLATE_REGISTRY_HOST/security-products"
  SECRET_DETECTION_IMAGE_SUFFIX: ""
  SECRETS_ANALYZER_VERSION: "5"
  SECRET_DETECTION_EXCLUDED_PATHS: ""

# base job to be extended by downstream pipelines
.base:
  variables:
    VERSION_SUFFIX_PATTERN: "v(\\d+.){1,2}\\d+"
    SERVICE_RELEASE_TAG_PATTERN: "/^$SERVICE_NAME-$VERSION_SUFFIX_PATTERN$/"

  rules:
    # trigger if changes are found in child directory or a new tag was created
    - changes:
        - "$SERVICE_DIRECTORY/**"
        - "$SERVICE_DIRECTORY/**/*"
    - if: $CI_COMMIT_TAG =~ $SERVICE_RELEASE_TAG_PATTERN

  needs: ["flag-secrets"]
  stage: trigger
  trigger:
    include: "$SERVICE_DIRECTORY/.*-ci.yml"

flag-secrets:
  stage: scan
  image: "$SECURE_ANALYZERS_PREFIX/secrets:$SECRETS_ANALYZER_VERSION$SECRET_DETECTION_IMAGE_SUFFIX"
  services: []
  allow_failure: false
  variables:
    GIT_DEPTH: "50"
  artifacts:
    reports:
      secret_detection: gl-secret-detection-report.json
  tags:
    - docker
  script:
    - /analyzer run

docs:
  variables:
    SERVICE_NAME: "docs"
    SERVICE_DIRECTORY: $SERVICE_NAME
  extends: .base

ansible:
  variables:
    SERVICE_NAME: "ansible"
    SERVICE_DIRECTORY: $SERVICE_NAME
  extends: .base

robot-service-template:
  variables:
    SERVICE_NAME: "robot-service-template"
    SERVICE_DIRECTORY: $SERVICE_NAME
  extends: .base

web-service-template:
  variables:
    SERVICE_NAME: "web-service-template"
    SERVICE_DIRECTORY: $SERVICE_NAME
  extends: .base

robot-perception-service:
  variables:
    SERVICE_NAME: "robot-perception-service"
    SERVICE_DIRECTORY: $SERVICE_NAME

  extends: .base
