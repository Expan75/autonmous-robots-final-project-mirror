# component-ish template for multi-arch robot services
spec:
  inputs:
    service:
    platforms:
      default: "linux/amd64,linux/arm64,linux/arm/v7"
---
image: docker

services:
  - docker:dind

default:
  tags: ["docker-build"]
  include:
    - local: "templates/rules.yml"
      inputs:
        service: "$[[ inputs.service ]]"

before_script:
  - printenv
  - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  - cd "$[[ inputs.service ]]"

stages:
  - build
  - release

"build-$[[ inputs.service ]]":
  stage: build
  script:
    - "docker build ."

"release-$[[ inputs.service ]]":
  rules:
    - if: "$CI_COMMIT_TAG != null && $CI_BUILD_TAG =~ $RELEASE_TAG_PATTERN"
    - if: "$CI_COMMIT_BRANCH != null && $CI_COMMIT_BRANCH =~ $RELEASE_TAG_PATTERN"
  stage: release
  script:
    - cd "$[[ inputs.service ]]"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - docker run --privileged --rm tonistiigi/binfmt --install all
    - docker context create builder
    - docker buildx create builder --use
    - docker buildx build --platform "$[[ inputs.platforms ]]" -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" --push .
