# Gitlab component for triggering and delegating to a child pipeline
spec:
  inputs:
    service:
---
before_script:
  - printenv

".$[[ inputs.service ]]_base":
  tags:
    - shell
  variables:
    RELEASE_PATTERN: "/$[[ inputs.service ]]*/i"
  rules:
    - if: '($CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_TAG == null)'
      changes:
        paths:
          - "$[[ inputs.service ]]/**"
    - if: '($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG == null)'
      changes:
        paths:
          - "$[[ inputs.service ]]/**"
    - if: $CI_COMMIT_TAG =~ $RELEASE_PATTERN
    - if: $CI_COMMIT_REF_SLUG =~ $RELEASE_PATTERN
    - if: $DOCKER_ENV_CI_COMMIT_TAG =~ $RELEASE_PATTERN
    - if: $DOCKER_ENV_CI_COMMIT_REF_SLUG =~ $RELEASE_PATTERN

"setup-$[[ inputs.service ]]":
  extends: ".$[[ inputs.service ]]_base"
  stage: trigger
  script:
    - printenv

"trigger-$[[ inputs.service ]]":
  extends: ".$[[ inputs.service ]]_base"
  stage: trigger
  extends: ".$[[ inputs.service ]]_base"
    # trigger if tag is created that matches the release pattern for the service
    - if: $CI_COMMIT_TAG =~ $RELEASE_PATTERN
    - if: $CI_COMMIT_REF_SLUG =~ $RELEASE_PATTERN
    - if: $DOCKER_ENV_CI_COMMIT_TAG =~ $RELEASE_PATTERN
    - if: $DOCKER_ENV_CI_COMMIT_REF_SLUG =~ $RELEASE_PATTERN

  trigger:
    include: "$[[ inputs.service ]]/.*-ci.yml"
    strategy: depend
